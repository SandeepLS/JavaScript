/*
Def:-The parseInt() function parses a string and returns an integer. 
It takes a second argument for the radix, 
which specifies the base of the number in the string. The radix can be an integer between 2 and 36.

The function call looks like:
parseInt(string, radix);

And here's an example:
const a = parseInt("11", 2);

The radix variable says that 11 is in the binary system, or base 2. This example converts the string 11 to an integer 3.
*/
/*
Task:-
Use parseInt() in the convertToInteger function so it converts a binary number to an integer and returns it.

Test:-
convertToInteger should use the parseInt() function
Passed:convertToInteger("10011") should return a number
Passed:convertToInteger("10011") should return 19
Passed:convertToInteger("111001") should return 57
Passed:convertToInteger("JamesBond") should return NaN
*/
Ex:-
function convertToInteger(str) {
    return parseInt(str, 2);
}
console.log(convertToInteger("10011"));
O/P:-19
------OR--------
const a = parseInt("11", 2);
console.log(a);
O/P:-19

/*
Explain:- Conversion Process:
The binary string "10011" is converted to its decimal equivalent using the specified radix (base-2).
In binary, the position of each digit represents a power of 2. So, starting from the right:
1 * 2^0 = 1
1 * 2^1 = 2
0 * 2^2 = 0
0 * 2^3 = 0
1 * 2^4 = 16
Add these values: 1 + 2 + 0 + 0 + 16 = 19.
*/
