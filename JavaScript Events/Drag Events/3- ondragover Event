The ondragover event occurs when a draggable selection is dragged over a target.

By default, data/elements cannot be dropped in other elements. To allow a drop, we must prevent the default handling of the element. This is done by calling the event.preventDefault() method for the ondragover event.

<!DOCTYPE HTML>
<html>
<style>
#droptarget {
  width: 200px; 
  height: 35px;
  padding: 10px;
  border: 1px solid black;
}
</style>

<body>
<h1>HTML DOM Events</h1>
<h2>The ondragover Event</h2>

<p ondragstart="dragStart(event)" draggable="true" id="dragtarget">Drag me into the rectangle!</p>

<div id="droptarget" ondrop="drop(event)" ondragover="allowDrop(event)">
</div>

<p id="demo"></p>

<script>
function dragStart(event) {
  event.dataTransfer.setData("Text", event.target.id);
}

function allowDrop(event) {
  event.preventDefault();
  document.getElementById("demo").innerHTML = "The text is OVER the droptarget.";
  event.target.style.border = "4px dotted green";
}

function drop(event) {
  event.preventDefault();
  const data = event.dataTransfer.getData("Text");
  event.target.appendChild(document.getElementById(data));
  document.getElementById("demo").innerHTML = "The text was dropped.";
}
</script>

</body>
</html>
