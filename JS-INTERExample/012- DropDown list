/*
The second dropdown shows the cities based on the country selected in the first dropdown, 
you can modify the code like this:
  a)Use useState to manage the state of the selected country.
  b)Use conditional rendering to display the second dropdown when a country is selected.
*/
//Ex: https://codesandbox.io/p/sandbox/drop-down-6fjccx
import { useState } from "react";
import "./styles.css";

const countries = [
  {
    name: "India",
    value: "In",
    cities: ["Delhi", "Mumbai"],
  },
  {
    name: "Pak",
    value: "Pk",
    cities: ["Lahor", "Karachi"],
  },
  {
    name: "Bangladesh",
    value: "Bg",
    cities: ["Dhaka", "Chittagong"],
  },
];
export default function App() {
  const [selectCountry, setSelectCountry] = useState("");
  const [cities, setCities] = useState([]);

  const handleCountryChange = (e) => {
    const country = e.target.value;
    setSelectCountry(country);

    //Find the select country cities
    const countryData = countries.find((c) => c.name === country);
    if (countryData) {
      setCities(countryData.cities);
    } else {
      setCities([]);
    }
  };

  return (
    <div className="App">
      {/* First dropdown for country selection */}
      <select onChange={handleCountryChange}>
        <option value={""}>Select Countries</option>
        {countries.map((country) => (
          <option key={country.value} value={country.name}>
            {country.name}
          </option>
        ))}
      </select>

      {/* Second dropdown for city selection, visible only when a country is selected */}
      {cities.length > 0 && (
        <select>
          <option value="">cities</option>
          {cities.map((city, index) => (
            <option key={index} value={city}>
              {city}
            </option>
          ))}
        </select>
      )}
    </div>
  );
}

/*
Explaination:-
countries.map((country) => (...)):
  The map function is used to iterate over the countries array, which contains objects representing different countries (e.g., India, Pakistan, Bangladesh).
  For each country object in the array, the code returns a new <option> element for the dropdown menu.

<option key={country.value} value={country.name}>:
  <option> is an HTML element used inside a <select> to define individual options in a dropdown list.

countries.find(...):
  The find() method is used to search through the countries array.
  It iterates over each element in the array and returns the first element that satisfies the condition specified inside the callback function.
  The find() method returns the first matching element or undefined if no match is found.

(c) => c.name === country:
  This is an arrow function used as a callback inside the find() method.
*/
