React:- Component, State & Props
(A)Components:- are the building blocks of any React Application,-
  And single app usually consist of multiple components.
  A component is essentially a pice of the user Interface, It is like a function that returns HTML elements.
  Reusability: components can be reused, multiple time accross the application,
  this reduces the development time.
  Ex:-
  class Simple extends React.Component {   //A component is implementing as a JS class, having some state & render method.
  state = {};    //state is a data, which you want component to render.
  render(){      //render responsible, How the UI looks & Fell to the user.
      return(
          <div>
            <h1>Hello world</h1>
          </div>
      );
  }
}

(B)State:- is an object that holds some data. 
           This data influence the output of the component.
           Everytime the state of an object changes, The component is rerender on to the screen.

(C)Props:-props is short for Properties,
          That allows us to, pass argument or data, to components.
          Props are paased to components, in the way similar to that of HTML-Tag attributes.

Ex:- App.js
import React from 'react';

class App extends React.Component{
  render(){
    return(
        <div>
          <h1>{this.props.carProp}</h1>
          <h1>{this.props.bikeProp}</h1>
        </div>
    );
  }
}

Main.js()
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App.jsx';

ReactDOM.render(<App carProp="600cc" bikeProp="150cc" />,
            document.getElementById('app'));

export default App;
