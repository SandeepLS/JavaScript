Lists and Keys:-
Rendering lists of items efficiently using map and assigning a unique key to each item.

Lists:- are used to render a collection of data dynamically, such as displaying items from an array.
The map() function is commonly used to iterate over the array and create a list of elements.

Keys:- are special attributes that React uses to identify which items in a list have changed,
are added, or are removed.

Example: Rendering a List with Keys:-
  import React from "react";
  function ShoppingList() {
    const items = ["Apples", "Bananas", "Cherries"]; // Array of items
  
    return (
      <ul>
        {items.map((item, index) => (
          <li key={index}>{item}</li> // Use the index as the key
        ))}
      </ul>
    );
  }
  
  export default ShoppingList;

-----
Explanation of the Example
1. Data Source: 
   The items array contains the data to be rendered ("Apples", "Bananas", "Cherries").

2. Rendering with map():
   The map() function iterates over each item in the items array.
   For each item, it creates an <li> element.

3. Unique Key:
   The key attribute is assigned a unique value for each <li>. Here, index is used as a key.
   While index is acceptable for simple lists, for dynamic lists (e.g., items can be added or removed),
   use a more stable unique identifier like an id.

-----------------------------------------------------------------------------------------
Improved Example with Unique IDs:-
  import React from "react";
  
  function ShoppingList() {
    const items = [
      { id: 1, name: "Apples" },
      { id: 2, name: "Bananas" },
      { id: 3, name: "Cherries" },
    ];
  
    return (
      <ul>
        {items.map((item) => (
          <li key={item.id}>{item.name}</li> // Use a unique `id` as the key
        ))}
      </ul>
    );
  }
  
  export default ShoppingList;
