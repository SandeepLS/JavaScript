Higher order component:- is a Function, 
  that takes a component, and returns a new component.
  It facilites reusing of component logic.
  Ex:- const NewComponent = higherOrderComponent(OriginalComponent);

  For Example:-1
  (i)Evertime we click the button, the value gets increment. (type:- rce).
    import React, { Component } from 'react'
    export class Click extends Component {
      render() {
        return (
          <div>
            <button>Clicked 1 item</button>
          </div>
        )
      }
    }
    export default Click
  
  (ii)And this am using variable count, here am using to consept of state.(type:- rconst)
      lets define a variable count, and initialize it to 0.
      constructor(props) {
      super(props)
    
      this.state = {
         count: 0;
      }
    }
    
  (iii)Lets define the count variable, in render method.
      const {count} = this.state;
      
  (iv)Update:- <button onClick={this.UpdateClick}>Clicked 1 item</button>
      UpdateClick is another method, lets define in state.
      UpdateClick = () =>{
        this.setState({ count: this.state.count + 1 });
      };

  (v)Final O/P:-
Click.js:-
import React, { Component } from 'react'

export class Click extends Component {
   constructor(props) {
     super(props);
   
     this.state = {
        count: 0
     };
   }

   UpdateClick = () =>{
        this.setState({count: this.state.count + 1});
   };

  render() {
    const { count } = this.state;
    return (
      <div>
        <button onClick={this.UpdateClick}>Clicked {count} item</button>
      </div>
    );
  }
}
export default Click

App.js:-
import React from 'react';
import Click from './Components/Click';

function App() {
  return (
    <div>
      <h1>Hello world</h1>
      <Click />
   </div>
  );
}
export default App;
-----------------------------------------------------------------------------------------------

For Example:-2
When ever the mouse over on the button, it will increment a value.

MouseEnter.js:-
import React, { Component } from 'react'

export class Click extends Component {
   constructor(props) {
     super(props);
   
     this.state = {
        count: 0
     };
   }

   UpdateMouseEnter = () =>{
        this.setState({count: this.state.count + 1});
   };

  render() {
    const { count } = this.state;
    return (
      <div>
        <button onMouseEnter={this.UpdateMouseEnter}>Clicked {count} item</button>
      </div>
    );
  }
}
export default Click

App.js:-
import React from 'react';
import MouseEnter from './Components/MouseEnter';

function App() {
  return (
    <div>
      <h1>Hello world</h1>
      <Click />
      <MouseEnter />
   </div>
  );
}
export default App;

------------------------------------------------------------------------------------------------
To learn how Higher order component works, will have to pass Click.js & Counter.js as parameter,
to gives birth to entire new component.
Create another component:-
HigherOrder.js:-
import React from "react";

const UpdatedComp = OriginalComp =>{
    class NewComp extends React.Component{
       render(){
        return <OriginalComp name = "The user"/>
       }
    }
    return NewComp;
}
export default UpdatedComp;

Click.js:- export default UpdatedComp(Click)
<div>
        <button onClick={this.UpdateClick}>{this.props.name}cursor Clicked {count} item</button>
</div>

MouseEnter.js:- export default UpdatedComp(MouseEnter)
 <div>
        <button onMouseEnter={this.UpdateMouseMove}>{this.props.name}cursor hover {count}</button>
 </div>


Note:-This shows, How react implement reusability of components.

  
  
